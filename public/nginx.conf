##
# Modified by Niiquaye Divine Ibok [divineibok@gmail.com]
#
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Add the following line to your server's configuration block
# include "/path/to/script/private/nginx.conf";
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;
    #
    # ssl_certificate               '';
    # ssl_certificate_key           '';
    # ssl_trusted_certificate     '';

    # Force client-side SSL redirection.
    #
    # If a user types "example.com" in his browser, the above rule will redirect
    # him to the secure version of the site. That still leaves a window of oppor-
    # tunity (the initial HTTP connection) for an attacker to downgrade or redirect
    # the request. The following header ensures that browser will ONLY connect to
    # your server via HTTPS, regardless of what the users type in the address bar.
    # http://tools.ietf.org/html/draft-ietf-websec-strict-transport-sec-14#section-6.1
    # http://www.html5rocks.com/en/tutorials/security/transport-layer-security/
    #
    # (!) Remove the `includeSubDomains` optional directive if the subdomains are
    # not using HTTPS.
    #
    # add_header Strict-Transport-Security "max-age=16070400; includeSubDomains";
    #
    # Force HTTPS
    # add_header Strict-Transport-Security 'max-age=2592000' always;
    # if ($scheme ~* ^(?!https).*$) {
    #    return 301 https://$host$request_uri;
    # }
    #
    # Force www.site.com => site.com
    # if ($host ~* ^www\.(.+)$) {
    #    return 301 $scheme://$1$request_uri;
    # }
    #
    # Disable access to backup/config/command/log files
    # if ($uri ~* ^.+\.(?:bak|co?nf|in[ci]|log|orig|sh|sql|tar|sql|t?gz|cmd|bat)$) {
    #    return 404;
    # }

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

    # Expire rules for static content
    location ~* ^.+\.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv|svgz?|ttf|ttc|otf|eot|woff2?)$ {
        expires 1d;
        access_log off;
    }

    # Prevent clients from accessing hidden files (starting with a dot)
    # This is particularly important if you store .htpasswd files in the site hierarchy
    # Access to `/.well-known/` is allowed.
    # https://www.mnot.net/blog/2010/04/07/well-known
    # https://tools.ietf.org/html/rfc5785
    location ~* /\.(?!well-known\/) {
        deny all;
    }

	location / {
        # Force index.php routing (if not found)
        # try_files $uri $uri/ /index.php?$query_string;

        # Force index.php routing (all requests)
        # rewrite ^/(.*)$ /index.php?/$1 last;

		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}
